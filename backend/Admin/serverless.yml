org: ${env:SLS_ORG}
service: disdb-admin-api

provider:
  name: aws
  runtime: python3.9
  iam:
    role: ${env:AWS_ROLE_ARN}
  memorySize: 1024
  timeout: 29
  environment:
    EXCHANGE_RATE_TABLE: ${sls:stage}-admin-config-table  # Cambié el nombre aquí
    SERVICE_NAME: disdb-auth-api
    STAGE: ${sls:stage}
    VALIDATE_TOKEN_FUNCTION: validateToken
    USER_SERVICE_NAME: disdb-auth-api  # Añadimos esta variable de entorno

functions:
  setCurrencyLimit:
    handler: setCurrencyLimit.lambda_handler
    events:
      - http:
          path: admin/currency-limit
          method: put
          cors: true

  getCurrencyLimit:
    handler: getCurrencyLimit.lambda_handler
    events:
      - http:
          path: admin/currency-limit
          method: get
          cors: true

  setCurrencyDateLimit:
    handler: setCurrencyDateLimit.lambda_handler
    events:
      - http:
          path: admin/currency-date-limit
          method: put
          cors: true

  getCurrencyDateLimit:
    handler: getCurrencyDateLimit.lambda_handler
    events:
      - http:
          path: admin/currency-date-limit
          method: get
          cors: true

resources:
  Resources:
    AdminConfigTable:  # Nombre de la tabla en DynamoDB
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.EXCHANGE_RATE_TABLE}  # Usando el nuevo nombre aquí
        AttributeDefinitions:
          - AttributeName: config_id
            AttributeType: S
        KeySchema:
          - AttributeName: config_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
